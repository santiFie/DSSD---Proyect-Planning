# ===============================
# APPLICATION CONFIG
# ===============================
spring.application.name=proyect-planning-system
server.port=8081

# ===============================
# DATABASE CONFIG
# ===============================
# PostgreSQL Database Configuration
# En Docker usará las variables de entorno del docker-compose.yml
# En local usará localhost
spring.datasource.url=${SPRING_DATASOURCE_URL:jdbc:postgresql://localhost:5432/myappdb}
spring.datasource.username=${SPRING_DATASOURCE_USERNAME:admin}
spring.datasource.password=${SPRING_DATASOURCE_PASSWORD:admin}
spring.datasource.driver-class-name=org.postgresql.Driver

# ===============================
# JPA / HIBERNATE CONFIG
# ===============================
# JPA Configuration
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=false
spring.jpa.properties.hibernate.format_sql=false
spring.jpa.properties.hibernate.use_sql_comments=false

# Connection Pool Configuration
spring.datasource.hikari.connection-timeout=20000
spring.datasource.hikari.maximum-pool-size=10
spring.datasource.hikari.minimum-idle=5
spring.datasource.hikari.idle-timeout=300000
spring.datasource.hikari.max-lifetime=1200000

# ===============================
# WEB CONFIG
# ===============================
# Disable open-in-view warning
spring.jpa.open-in-view=false

# CORS Configuration (para desarrollo)
spring.web.cors.allowed-origins=http://localhost:4200
spring.web.cors.allowed-methods=GET,POST,PUT,DELETE,OPTIONS
spring.web.cors.allowed-headers=*
spring.web.cors.allow-credentials=true

# Swagger UI access
springdoc.swagger-ui.path=/swagger-ui.html

# ===============================
# ACTUATOR CONFIG
# ===============================
# Management endpoints
management.endpoints.web.exposure.include=health,info,metrics
management.endpoint.health.show-details=when-authorized

# ===============================
# BONITA INTEGRATION CONFIG
# ===============================
# Bonita BPM Server Configuration
bonita.server.url=${BONITA_SERVER_URL:http://localhost:8080/bonita}
bonita.server.username=walter.bates
bonita.server.password=bpm
bonita.login.endpoint=/loginservice
bonita.api.endpoint=/APIToolkit

# ===============================
# DEVELOPMENT PROFILES
# ===============================
# Para usar H2 en desarrollo (comentar PostgreSQL arriba)
# spring.datasource.url=jdbc:h2:mem:testdb
# spring.datasource.driver-class-name=org.h2.Driver
# spring.datasource.username=sa
# spring.datasource.password=
# spring.h2.console.enabled=true
